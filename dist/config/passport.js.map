{"version":3,"sources":["../../src/config/passport.js"],"names":["opts","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","config","secret","passport","use","Strategy","jwt_payload","done","User","findOne","email","err","user","message","validPassword","password"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,IAAI,GAAG;AACXC,EAAAA,cAAc,EAAEC,wBAAWC,2BAAX,EADL;AAEXC,EAAAA,WAAW,EAAEC,eAAOC;AAFT,CAAb;;eAKeC,QAAQ,IAAI;AACzBA,EAAAA,QAAQ,CAACC,GAAT,CACE,IAAIC,qBAAJ,CAAaT,IAAb,EAAmB,CAACU,WAAD,EAAcC,IAAd,KAAuB;AACxCC,kBAAKC,OAAL,CAAa;AAAEC,MAAAA,KAAK,EAAEJ,WAAW,CAACI;AAArB,KAAb,EAA2C,CAACC,GAAD,EAAMC,IAAN,KAAe;AACxD,UAAID,GAAJ,EAAS;AACP,eAAOJ,IAAI,CAACI,GAAD,CAAX;AACD;;AACD,UAAI,CAACC,IAAL,EAAW;AACT,eAAOL,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc;AAAEM,UAAAA,OAAO,EAAE;AAAX,SAAd,CAAX;AACD;;AACD,UAAI,CAACD,IAAI,CAACE,aAAL,CAAmBR,WAAW,CAACS,QAA/B,CAAL,EAA+C;AAC7C,eAAOR,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc;AAAEM,UAAAA,OAAO,EAAE;AAAX,SAAd,CAAX;AACD;;AACD,aAAON,IAAI,CAAC,IAAD,EAAOK,IAAP,CAAX;AACD,KAXD;AAYD,GAbD,CADF;AAgBD,C","sourcesContent":["import { Strategy, ExtractJwt } from 'passport-jwt';\nimport config from './index';\nimport User from '../models/User';\n\nconst opts = {\n  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n  secretOrKey: config.secret\n};\n\nexport default passport => {\n  passport.use(\n    new Strategy(opts, (jwt_payload, done) => {\n      User.findOne({ email: jwt_payload.email }, (err, user) => {\n        if (err) {\n          return done(err);\n        }\n        if (!user) {\n          return done(null, false, { message: 'Incorrect username.' });\n        }\n        if (!user.validPassword(jwt_payload.password)) {\n          return done(null, false, { message: 'Incorrect password.' });\n        }\n        return done(null, user);\n      });\n    })\n  );\n};\n"],"file":"passport.js"}