{"version":3,"sources":["../src/index.js"],"names":["port","db","sessionSecret","sessionMap","corsOptions","config","app","use","mongoose","connect","useNewUrlParser","useUnifiedTopology","then","console","log","bodyParser","urlencoded","extended","json","passport","initialize","auth","listen","catch","err"],"mappings":";;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAZA;AAcA,MAAM;AAAEA,EAAAA,IAAF;AAAQC,EAAAA,EAAR;AAAYC,EAAAA,aAAZ;AAA2BC,EAAAA,UAA3B;AAAuCC,EAAAA;AAAvC,IAAuDC,eAA7D;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,qBAAO,KAAP,CAAR;;AAEAC,kBACGC,OADH,CACWR,EADX,EACe;AAAES,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CADf,EAEGC,IAFH,CAEQ,MAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEAR,EAAAA,GAAG,CAACC,GAAJ,CAAQ,sBAAR;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEAR,EAAAA,GAAG,CAACC,GAAJ,CAAQ,4BAAR;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAEAR,EAAAA,GAAG,CAACC,GAAJ,CAAQ,mBAAKH,WAAL,CAAR;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEAR,EAAAA,GAAG,CAACC,GAAJ,CAAQ,6BAAQJ,UAAU,CAACD,aAAD,CAAlB,CAAR;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AAEAR,EAAAA,GAAG,CAACC,GAAJ,CAAQQ,oBAAWC,UAAX,CAAsB;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAtB,CAAR;AACAX,EAAAA,GAAG,CAACC,GAAJ,CAAQQ,oBAAWG,IAAX,EAAR;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAEAR,EAAAA,GAAG,CAACC,GAAJ,CAAQY,kBAASC,UAAT,EAAR;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,0BAAeK,iBAAf;AAEAb,EAAAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBc,aAAjB;AAEAf,EAAAA,GAAG,CAACgB,MAAJ,CAAW;AAAEtB,IAAAA;AAAF,GAAX,EAAqB,MACnBa,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAmC,oBAAmBd,IAAK,EAA3D,CADF;AAGD,CA9BH,EA+BGuB,KA/BH,CA+BSC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CA/BhB","sourcesContent":["/* eslint-disable no-console */\nimport express from 'express';\nimport mongoose from 'mongoose';\nimport logger from 'morgan';\nimport cors from 'cors';\nimport passport from 'passport';\nimport helmet from 'helmet';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport session from 'express-session';\nimport config from '../config';\nimport passportConfig from '../config/passport';\nimport auth from './routes/api/auth';\n\nconst { port, db, sessionSecret, sessionMap, corsOptions } = config;\n\nconst app = express();\napp.use(logger('dev'));\n\nmongoose\n  .connect(db, { useNewUrlParser: true, useUnifiedTopology: true })\n  .then(() => {\n    console.log('MongoDB connected');\n\n    app.use(helmet());\n    console.log('Middleware added: helmet');\n\n    app.use(cookieParser());\n    console.log('Middleware added: cookie-parser');\n\n    app.use(cors(corsOptions));\n    console.log('Middleware added: cookie');\n\n    app.use(session(sessionMap(sessionSecret)));\n    console.log('Middleware added: express-session');\n\n    app.use(bodyParser.urlencoded({ extended: false }));\n    app.use(bodyParser.json());\n    console.log('Middleware added: body-parser');\n\n    app.use(passport.initialize());\n    console.log('Middleware added: passport');\n    passportConfig(passport);\n\n    app.use('/auth', auth);\n\n    app.listen({ port }, () =>\n      console.log('ðŸš€ Server ready at', `http://localhost:${port}`)\n    );\n  })\n  .catch(err => console.log(err));\n"],"file":"index.js"}